#Задача 1. 
function jarvismarch(A) 
    n = lth(A)
    L = collect(m) 
    for i in 2:n 
        if A[L[i]][1]<A[L[1]][1] 
            L[i], L[1] = L[1], L[i]  
    end
D = [L[1]]  
delete!(L,L[1])
L.insert!(D[1])
    while True
   right = 0
   for i in 2:lth(P)
     if rotate(A[D[-1]],A[L[right]],A[L[i]])<0
        right = i
     end
    end
      if L[right]==D[1]
          break
        else
      D.insert!(L[right])
      delete!(L,L[right])
      end
return D
end
end
#Задача 2
function grahamscan(A)
 n = lth(A)
 D = collect(n) 
for i in 2:n 
   if A[D[i]][1]<A[D[1]][1] 
   D[i], D[1] = D[1], D[i] 
    for i in 3:n 
j = i
   while ((j>1) && (rotate(A[D[0]],A[D[j-1]],A[D[j]])<0))
     D[j], D[j-1] = D[j-1], D[j]
     j -= 1
        end
 end
 K = collect(2)
 K[1] = D[1]
 K[2] = D[2]    
  for i in 3:n
 while (rotate(A[K[-2]],A[K[-1]],A[D[i]])<0)
    delete!(K,K[-1]) 
 end
    K.insert!(D[i]) 
    end
    return K
end
